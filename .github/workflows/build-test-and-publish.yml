name: Build, Test and Publish

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSIONS: |
    8.0
    9.0
    10.0
  BUILD_VERSION: "${{ startsWith(github.ref, 'refs/tags/v') && '${GITHUB_REF_NAME#v}' || '$(date +%Y.%m.%d).${GITHUB_RUN_NUMBER}' }}"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup .NET Versions
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSIONS }}
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      - name: Install Coverage Checker
        run: dotnet tool install --global CoverageChecker.CommandLine
      - name: Check Coverage
        run: coveragechecker --format Cobertura --glob-patterns 'coverage/**/coverage.cobertura.xml' --line-threshold 100 --branch-threshold 100
      - name: Pack NuGet Packages
        run: dotnet pack --configuration Release --no-build /p:PackageVersion=${{ env.BUILD_VERSION }}
      - name: Upload NuGet Packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: '**/*.nupkg'
          if-no-files-found: error
  publish-nuget-package:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Publish NuGet Packages
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET Versions
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSIONS }}
      - name: Download NuGet Packages
        uses: actions/download-artifact@v5
        with:
          name: nuget-packages
      - name: Add GitHub NuGet Source
        run: dotnet nuget add source "https://nuget.pkg.github.com/Thomas-Shephard/index.json" --name "github.com" --username "Thomas-Shephard" --password ${{ secrets.PUBLISH_TO_GITHUB_TOKEN }} --store-password-in-clear-text
      - name: Push to NuGet Sources
        run: |
          dotnet nuget push **/*.nupkg --source "github.com"
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.PUBLISH_TO_NUGET_TOKEN }} --source "nuget.org"
